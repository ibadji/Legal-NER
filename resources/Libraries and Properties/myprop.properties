# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Sample machine learning properties file

Algorithm=PERCEPTRON
Iterations=500
Cutoff=0

##################################################
#### Custom parameters added by ixa-pipe-nerc ####
##################################################

# Languages supported: de, en, es, eu, it, nl
Language=es

# ClearAdaptiveFeatures: ONLY WORKS with CONLL formats!!
# Specify if adaptive features
# are to be cleared when no -DOCSTART- mark is available
# in the training and/or evaluation data. If commented out
# both values default to 'no'
ClearTrainingFeatures=no
ClearEvaluationFeatures=no

# TrainingCorpus:
TrainSet=resources/corpus/esp.train
TestSet=resources/corpus/esp.testa

# CorpusFormat: conll02, conll03, opennlp
CorpusFormat=conll02

# OutputModel:
OutputModel=resources/models/mybin.bin

# Named Entity types; if not active all ne types in the training corpus.
# Otherwise, separate with comma, eg., location,organization,person,misc
#Types=ORG,LOC,PER

# Beamsize 1 amounts to greedy search
BeamSize=3

#SequenceCodec=BIO

##############
## FEATURES ##
##############

# Window: left and right window range from the current token. TokenFeatures
# and TokenClassFeatures depend on the window range specified here.
Window=2:2

# TokenFeatures: include current token (both in original and lowercase form)
TokenFeatures=yes

# TokenClassFeatures: include token shape features (capitalization, digits,
# etc. see FastTokenClassFeatureGenerator class in ixa.pipe.nerc.train.features
# for details
TokenClassFeatures=yes

# OutcomePriorFeatures: maps the underlying previous outcomes
OutcomePriorFeatures=yes

# PreviousMapFeatures: takes into account previous decisions and adds them as
# features
PreviousMapFeatures=yes

# SentenceFeatures: add first and last words of sentence as features.
SentenceFeatures=yes

# PrefixFeatures: takes first 3rd and 4rd characters of current token as feature.
PrefixFeatures=yes

# SuffixFeatures: takes last 4 characters of current token as feature.
SuffixFeatures=yes

# BigramClassFeatures: adds bigram features based on tokens and their class
# features.
BigramClassFeatures=yes

#DictionaryFeatures=/home/ragerri/resources/nerc-models/conll03/english/lbj

# BrownClusterFeatures: add features using Brown clusters
# (http://metaoptimize.com/projects/wordreprs/). If yes, specify the location
# of the Brown clustering lexicon.
#BrownClusterFeatures=/tartalo01/users/ragerri/resources/clusters/periodico/brown/es-periodico-preclean.tok-c1000-p1.txt

# ClarkClusterFeatures: add features using Clark (2003) clusters. If value is yes,
# specify the location of the clustering lexicon in Clark format.
#ClarkClusterFeatures=/tartalo01/users/ragerri/resources/clusters/wikipedia/es/clark/es-wiki-preclean.tok.punct.lower.400,/tartalo01/users/ragerri/resources/clusters/gigaword/spanish-3rd/clark/es-gigaword-preclean.tok.punct.lower.400

# Word2VecClusterFeatures: add features using word2vec clusters. If value is
# yes, specify the location of the clustering lexicon in word2vec format.
#Word2VecClusterFeatures=/tartalo01/users/ragerri/resources/clusters/gigaword/spanish-3rd/word2vec/es-gigaword-s50-w5.400

## END FEATURES ##
